using System;
using System.Net.Http;
using System.Threading.Tasks;
using System.IO;

public static class HackerNewsService
{
    private static readonly HttpClient client = new HttpClient();

    public static UrlContentResponse GetUrlContent(GetUrlContentInput input)
    {
        try
        {
            var response = client.GetAsync(input.Url).GetAwaiter().GetResult();

            if (!response.IsSuccessStatusCode)
            {
                return new UrlContentResponse
                {
                    Supervisor = "If the error is retryable, try again. If not, tell the user why this failed.",
                    Message = $"Failed to fetch {input.Url}: {response.StatusCode}",
                    Response = response.ToString()
                };
            }

            var html = response.Content.ReadAsStringAsync().GetAwaiter().GetResult();
            // Simple HTML tag stripping (except for <a> tags)
            var strippedHtml = System.Text.RegularExpressions.Regex.Replace(
                html,
                @"<(?!a\s|\/a\s|a>|\/a>)[^>]*>",
                string.Empty
            );

            return new UrlContentResponse { Body = strippedHtml };
        }
        catch (Exception ex)
        {
            return new UrlContentResponse { Error = ex.Message };
        }
    }

    public static int ScoreHNPost(ScorePostInput input)
    {
        return input.Upvotes + (input.CommentCount * 2);
    }

    public static GeneratePageResponse GeneratePage(GeneratePageInput input)
    {
        var html = $@"
<html>
    <head>
        <title>Hacker News Page Generated by Inferable</title>
        <script src=""https://unpkg.com/showdown/dist/showdown.min.js""></script>
    </head>
    <body>
        <div id=""content"">{input.Markdown}</div>
        <script>
            const converter = new showdown.Converter();
            document.getElementById(""content"").innerHTML = converter.makeHtml(document.getElementById(""content"").innerHTML);
        </script>
    </body>
</html>";

        var tmpPath = Path.Combine(Path.GetTempPath(), "inferable-hacker-news.html");
        File.WriteAllText(tmpPath, html);

        return new GeneratePageResponse
        {
            Message = "Tell the user to open the file at tmpPath in their browser.",
            TmpPath = tmpPath
        };
    }
}
