services:
  control-plane:
    image: inferable/control-plane:latest
    container_name: control-plane
    depends_on:
      - postgres
      - redis
      - elasticmq
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: "postgresql://inferable:inferable@postgres:5432/inferable"
      DATABASE_SSL_DISABLED: "true"
      REDIS_URL: "redis://redis:6379"
      # Required for elasticmq
      AWS_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: "PLACEHOLDER"
      AWS_SECRET_ACCESS_KEY: "PLACEHOLDER"
      SQS_BASE_QUEUE_URL: 'http://elasticmq:9324/000000000000'
      SQS_RUN_PROCESS_QUEUE_URL: 'http://elasticmq:9324/000000000000/run-process'
      SQS_RUN_GENERATE_NAME_QUEUE_URL: 'http://elasticmq:9324/000000000000/run-generate-name'
      SQS_CUSTOMER_TELEMETRY_QUEUE_URL: 'http://elasticmq:9324/000000000000/customer-telemetry'
      SQS_EXTERNAL_TOOL_CALL_QUEUE_URL: 'http://elasticmq:9324/000000000000/external-tool-call'
      SQS_EMAIL_INGESTION_QUEUE_URL: 'http://elasticmq:9324/000000000000/email-ingestion'
      MANAGEMENT_API_SECRET: ${MANAGEMENT_API_SECRET}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      COHERE_API_KEY: ${COHERE_API_KEY}
      APP_ORIGIN: 'http://localhost:3000'

  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres
    environment:
      POSTGRES_USER: inferable
      POSTGRES_PASSWORD: inferable
      POSTGRES_DB: inferable
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: redis

  elasticmq:
    image: softwaremill/elasticmq-native
    container_name: elasticmq
    configs:
      - source: elasticmq_conf
        target: /opt/elasticmq.conf
    volumes:
      - elasticmqdata:/data


volumes:
  pgdata:
  elasticmqdata:

configs:
  elasticmq_conf:
    content: |
      include classpath("application.conf")

      queues {
        run-process {}
        run-generate-name {}
        customer-telemetry {}
        external-tool-call {}
      }
